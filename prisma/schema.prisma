generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String            @id @default(cuid())
  createdAt     DateTime          @default(now()) @map("created_at")
  name          String?
  email         String?           @unique
  emailVerified DateTime?         @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  results       Result[]
  achievements  UserAchievement[]

  role UserRole @default(USER)

  snippets Snippet[]

  @@map("users")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Result {
  id         String   @id @default(cuid())
  snippet    Snippet  @relation(fields: [snippetId], references: [id], onDelete: Cascade)
  userId     String   @map("user_id")
  createdAt  DateTime @default(now()) @map("created_at")
  accuracy   Decimal  @db.Decimal(5, 2)
  cpm        Int
  takenTime  String   @map("taken_time")
  errorCount Int?     @map("error_count")
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  snippetId  String

  @@map("results")
}

model Achievement {
  id          String            @id @default(cuid())
  name        String
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")
  image       String
  description String?
  unlocks     UserAchievement[]

  @@map("achievements")
}

model UserAchievement {
  userId        String      @map("user_id")
  achievementId String      @map("achievement_id")
  unlockedAt    DateTime    @default(now()) @map("unlocked_at")
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  achievement   Achievement @relation(fields: [achievementId], references: [id], onDelete: Cascade)

  @@id([userId, achievementId])
  @@map("user_achievements")
}

model Snippet {
  id String @id @default(cuid())

  code     String
  language String
  User     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String   @map("user_id")
  Result   Result[]

  @@map("snippets")
}
